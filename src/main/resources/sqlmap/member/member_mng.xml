<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberDAO">
<!--회원 조회(조회용) -->
<select id="memberList" parameterType="LoginVO" resultType="LoginVO">
    SELECT
        B.member_id AS memberId,
        B.member_pw AS memberPw,
        B.email AS email,
        B.member_role AS memberRole,
        B.certify_yn AS certifyYn,
        B.regist_date AS registDate,
        B.update_date AS updateDate,
        B.update_user AS updateUser,
        B.approve_yn AS approveYn,
        B.approve_date AS approveDate,
        B.block_yn AS blockYn,
        B.member_name AS memberName,
        B.member_company AS memberCompany,
        B.total_count AS totalCount
    FROM (
        SELECT
            ROW_NUMBER() OVER (ORDER BY regist_date DESC) AS RN,
            COUNT(*) OVER () AS total_count,
            member_id,
            member_pw,
            email,
            member_role,
            certify_yn,
            regist_date,
            update_date,
            update_user,
            approve_yn,
            approve_date,
            block_yn,
            member_name,
            member_company
        FROM tb_user
        WHERE 1=1
        <choose>
            <when test="searchType == 'memberName'">
                AND member_name ILIKE '%' || #{searchKeyword} || '%'
            </when>
            <when test="searchType == 'memberId'">
                AND member_id ILIKE '%' || #{searchKeyword} || '%'
            </when>
            <otherwise>
                AND (
                    member_name ILIKE '%' || #{searchKeyword} || '%'
                    OR email ILIKE '%' || #{searchKeyword} || '%'                   
                )
            </otherwise>
        </choose>
        <if test="approveYn != null and approveYn != ''">
            AND approve_yn = #{approveYn}
        </if>
        <if test="blockYn != null and blockYn != ''">
            AND block_yn = #{blockYn}
        </if>
    ) AS B
    WHERE B.RN BETWEEN #{firstIndex} AND #{lastIndex}
    ORDER BY B.regist_date DESC;
</select>
<update id="approveMemberUpdate" parameterType="LoginVO">
	UPDATE
		TB_USER
	SET
		approve_yn = #{approveYn}
	WHERE
		member_id = #{memberId}
</update>
<update id="blockMemberUpdate" parameterType="LoginVO">
	UPDATE
		TB_USER
	SET
		block_yn = #{blockYn}
	WHERE
		member_id = #{memberId}
</update>
<update id="changeRole" parameterType="LoginVO">
	UPDATE
		TB_USER
	SET
		member_role =#{memberRole}
	WHERE
		member_id = #{memberId}
</update>
    
    
</mapper>	